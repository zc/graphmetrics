    >>> import pkg_resources
    >>> dist = pkg_resources.working_set.find(
    ...     pkg_resources.Requirement.parse('zc.graphmetrics'))
    >>> Recipe = pkg_resources.load_entry_point(
    ...     dist, 'zc.buildout', 'default')

    >>> from zc.metarecipe.testing import Buildout
    >>> recipe = Recipe(Buildout(), 'zmh,metrics.0', {})
    [collect]
    deployment = deployment
    logpath = /home/databases/logs/tracelogs/z4m
    program = ${buildout:bin-directory}/collect_tracelogs ${:logpath} ${:rrdpath}
    recipe = zc.zdaemonrecipe
    rrdpath = ${rrd:paths}
    zdaemon.conf = <runner>
      transcript ${deployment:log-directory}/collect-tracelogs.log
      </runner>
    [deployment]
    name = zmh,metrics.0
    recipe = zc.recipe.deployment
    user = zope
    [kinesis]
    deployment = deployment
    program = ${buildout:bin-directory}/collect_kinesis ${:stream} ${:rrdpath}
    recipe = zc.zdaemonrecipe
    rrdpath = ${metric-rrd:paths}/cimaa
    stream = cimaa.metrics
    zdaemon.conf = <runner>
      transcript ${deployment:log-directory}/collect-metrics.log
      </runner>
    [metric-rrd]
    group = zope
    paths = /home/databases/rrds/metrics
    recipe = z3c.recipe.mkdir
    user = zope
    [metrics]
    addr = samanage4.zmh.zope.net:5556
    deployment = deployment
    program = ${buildout:bin-directory}/collect_metrics ${:rrdpath} ${:addr}
    recipe = zc.zdaemonrecipe
    rrdpath = ${metric-rrd:paths}
    zdaemon.conf = <runner>
      transcript ${deployment:log-directory}/collect-metrics.log
      </runner>
    [paste.ini]
    deployment = deployment
    recipe = zc.recipe.deployment:configuration
    s = 
    text = ${:s}[app:main]
      ${:s}use = egg:bobo
      ${:s}bobo_configure = zc.graphmetrics.tracelogs:config
      ${:s}                 zc.graphmetrics.metrics:config
      ${:s}                 zc.graphmetrics.auth:config
      ${:s}bobo_resources = zc.graphmetrics.metrics
      ${:s}                 zc.graphmetrics.tracelogs
      ${:s}                 zc.graphmetrics.auth
      ${:s}
      ${:s}metrics-rrd = ${metrics:rrdpath}
      ${:s}rrd = ${collect:rrdpath}
      ${:s}pool_info =
      ${:s}url = http://metrics.nova.aws.zope.net
      ${:s}
      ${:s}filter-with = reload
      ${:s}
      ${:s}logging =
      ${:s}     <logger>
      ${:s}        level INFO
      ${:s}        <logfile>
      ${:s}           PATH STDOUT
      ${:s}           format $(asctime)s $(levelname)s $(name)s $(message)r
      ${:s}        </logfile>
      ${:s}     </logger>
      ${:s}
      ${:s}[filter:reload]
      ${:s}use = egg:bobo#reload
      ${:s}modules = zc.graphmetrics.tracelogs
      ${:s}          zc.graphmetrics.metrics
      ${:s}          zc.graphmetrics.auth
      ${:s}
      ${:s}filter-with = translogger
      ${:s}
      ${:s}[filter:translogger]
      ${:s}use = egg:paste#translogger
      ${:s}logger_name = access
      ${:s}
      ${:s}filter-with = browserid
      ${:s}
      ${:s}[filter:browserid]
      ${:s}use = egg:zc.wsgisessions
      ${:s}db-name =
      ${:s}
      ${:s}filter-with = zodb
      ${:s}
      ${:s}[filter:zodb]
      ${:s}use = egg:zc.zodbwsgi
      ${:s}configuration =
      ${:s}  <zodb>
      ${:s}     <filestorage>
      ${:s}        path ${collect:rrdpath}/web.fs
      ${:s}     </filestorage>
      ${:s}  </zodb>
      ${:s}
      ${:s}initializer = zc.graphmetrics.auth:db_init
      ${:s}
      ${:s}[filter:debug]
      ${:s}use = egg:bobo#debug
      ${:s}
      ${:s}[server:main]
      ${:s}use = egg:Paste#http
      ${:s}host = 0.0.0.0
      ${:s}port = 8081
    [rc]
    chkconfig = 345 99 10
    deployment = deployment
    digest = 6339dacd3f956a9cf9faa537168f2143ae38e21903c16b872358a8f3
    parts = web metrics collect kinesis
    process-management = true
    recipe = zc.recipe.rhrc
    [rrd]
    group = zope
    paths = /home/databases/rrds/tracelog
    recipe = z3c.recipe.mkdir
    user = zope
    [web]
    deployment = deployment
    program = ${buildout:bin-directory}/paster serve ${paste.ini:location}
    recipe = zc.zdaemonrecipe
    zdaemon.conf = <runner>
      transcript ${deployment:log-directory}/web.log
      </runner>

    >>> recipe.install()
    ()
    >>> recipe.update()
    ()
